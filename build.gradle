/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/scala_plugin.html
 */

plugins {
    // Apply the scala plugin to add support for Scala
    id 'scala'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use Scala 2.12 in our library project
    implementation 'org.scala-lang:scala-library:2.12.10'
    //Scala swing
    implementation 'org.scala-lang.modules:scala-swing_2.12:2.1.1'
    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.scalatest:scalatest_2.12:3.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.12:1.2.0'
	
	implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'
	implementation 'com.typesafe.play:play-json_2.12:2.9.0'

    implementation 'com.typesafe.akka:akka-actor_2.12:2.6.8'
    implementation 'com.enragedginger:akka-quartz-scheduler_2.12:1.8.4-akka-2.6.x'
}

compileScala {
    scalaCompileOptions.additionalParameters = ["-feature"]
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
  main = 'org.scalatest.tools.Runner'
  args = ['-R', 'build/classes/scala/test', '-o']
  classpath = sourceSets.test.runtimeClasspath
}
test.dependsOn spec

task testNoBroker(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/test', '-o', '-l', 'HOME.tags.BrokerRequired']
    classpath = sourceSets.test.runtimeClasspath
}